# MessageHub SMS API Tests - LOCAL DEVELOPMENT
# Installiere die "REST Client" Extension in VS Code
# Dann kannst du auf "Send Request" √ºber jeder ### Zeile klicken

### Variablen f√ºr lokale Entwicklung
@baseUrl = https://localhost:7142/api/message
@baseUrlHttp = http://localhost:5289/api/message
@localTenantKey = local-demo-12345

### 1. SMS senden via SMPP (POST)
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49123456789",
  "Content": "Hallo! Dies ist eine Test-SMS von der API.",
  "ChannelName": "localhost-smpp"
}

### 2. SMS senden mit l√§ngerer Nachricht (Multi-Part Test)
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49987654321", 
  "Content": "Dies ist eine l√§ngere Test-Nachricht um zu pr√ºfen, ob l√§ngere SMS-Inhalte korrekt verarbeitet werden. Die Nachricht sollte erfolgreich gespeichert und versendet werden und eventuell in mehrere Teile aufgeteilt werden.",
  "ChannelName": "localhost-smpp"
}

### 3. SMS senden - Fehlerfall (leere Telefonnummer)
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "",
  "Content": "Test Nachricht",
  "ChannelName": "localhost-smpp"
}

### 4. SMS senden mit sehr langer Nachricht (Multi-Part)
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49123456789",
  "Content": "Diese Nachricht ist sehr lang und sollte in mehrere SMS-Teile aufgeteilt werden. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
  "ChannelName": "localhost-smpp"
}

### 5. Alle SMS Nachrichten abrufen (GET)
GET {{baseUrl}}
Accept: application/json
X-Subscription-Key: {{localTenantKey}}

### 6. Spezifische SMS Status abrufen (GET) - ID 1
GET {{baseUrl}}/1/status
Accept: application/json
X-Subscription-Key: {{localTenantKey}}

### 7. Spezifische SMS Status abrufen (GET) - ID 2  
GET {{baseUrl}}/2/status
Accept: application/json
X-Subscription-Key: {{localTenantKey}}

### 8. SMS Status abrufen - nicht existierende ID
GET {{baseUrl}}/999/status
Accept: application/json
X-Subscription-Key: {{localTenantKey}}

### 9. Health Check - Swagger UI
GET {{baseUrl}}/../../swagger
Accept: text/html

### 10. Alternative HTTP (ohne HTTPS) f√ºr lokale Tests

### SMS senden via HTTP
POST {{baseUrlHttp}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49111222333",
  "Content": "Test SMS √ºber HTTP",
  "ChannelName": "localhost-smpp"
}

### Alle SMS via HTTP abrufen
GET {{baseUrlHttp}}
Accept: application/json
X-Subscription-Key: {{localTenantKey}}

###########################################
### üö´ ERROR TESTS & SECURITY 
###########################################

### Fehlschlag - Kein Subscription Key
POST {{baseUrl}}/send
Content-Type: application/json

{
  "PhoneNumber": "+49888444555",
  "Content": "Diese Nachricht sollte fehlschlagen - kein Key",
  "ChannelName": "localhost-smpp"
}

### Fehlschlag - Ung√ºltiger Subscription Key
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: invalid-key-test-12345

{
  "PhoneNumber": "+49888444666",
  "Content": "Diese Nachricht sollte auch fehlschlagen - ung√ºltiger Key",
  "ChannelName": "localhost-smpp"
}

### Fehlschlag - Nicht existierender Channel
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49888444777",
  "Content": "Ung√ºltiger Channel Test",
  "ChannelName": "non-existent-channel"
}

### Nachrichten ohne Key abrufen (sollte fehlschlagen)
GET {{baseUrl}}
Accept: application/json

###########################################
### üìä PERFORMANCE & LOAD TESTS
###########################################

### Schneller Burst Test - 3 SMS hintereinander
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49999111001",
  "Content": "Burst Test SMS #1",
  "ChannelName": "localhost-smpp"
}

###
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49999111002",
  "Content": "Burst Test SMS #2",
  "ChannelName": "localhost-smpp"
}

###
POST {{baseUrl}}/send
Content-Type: application/json
X-Subscription-Key: {{localTenantKey}}

{
  "PhoneNumber": "+49999111003",
  "Content": "Burst Test SMS #3",
  "ChannelName": "localhost-smpp"
}